To produce the follow sets, first we add $ to follow(S), where S is the start symbol. Then for all non terminals A, we apply the following rules for all occurences of A. 

1) If there is a production of the form B -> a A c, then all terminals in first(c) are in follow(A) (apart from epsilon).
2) If the production is of the form B -> a A, or B -> a A c where c =>* ε, then all terminals in follow(B) are in follow(A).

Tip: Make two lists – DONE and NOT DONE and put all follow sets under NOT DONE. Move follow(A) to DONE after rule 1 and 2 have been applied to all instances of A.

DONE

P $
StmtList $
Stmt +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $

FuncDef +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, RETURN, }
FuncBody }
FuncEntry +, -, (, NUMBER, STRING, ID, CALL, FUNC, RETURN, IF, ASSIGN, }

Params )
ParamList |, )
ParamListRest |, )
KeyWordParamListTail )
KeyWordParamListTailRest )
KeyWordParamList )
KeyWordParamListRest )
Param ,, |, )
KeyWordParam ,, )

Assign +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, RETURN, }, ,, )

Expr +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {
ExprRest +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {
--------------
Term +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {
TermRest +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {
Factor *, /, +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {
--------------
UnaryOp +, -, (, NUMBER, STRING, ID, CALL
AddOp +, -, (, NUMBER, STRING, ID, CALL
MultOp +, -, (, NUMBER, STRING, ID, CALL
Atom *, /, +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {

Conditional +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, RETURN, }
ConditionalRest +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, RETURN, }
----------------
Comparsion {
ComparisonTail {
CompOp +, -, (, NUMBER, STRING, ID, CALL
Bool {
----------------
ConditionalEntry +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, }
ConditionalBody }

Call *, /, +, -, (, NUMBER, STRING, ID, CALL, ASSIGN, IF, $, FUNC, |, RETURN, }, ,, ), GT, LT, GE, LE, EQ, NE, {

Args )
ArgList |, )
ArgListRest |, )
KeyWordArgListTail )
KeyWordArgListTailRest )
KeyWordArgList )
KeyWordArgListRest )
Arg ,, |, )
KeyWordArg ,, )


NOT DONE
